// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rayshade_multicore
NumericMatrix rayshade_multicore(double sunangle, NumericVector anglebreaks, NumericMatrix heightmap, double zscale, double maxsearch, int row);
RcppExport SEXP _rayshader_rayshade_multicore(SEXP sunangleSEXP, SEXP anglebreaksSEXP, SEXP heightmapSEXP, SEXP zscaleSEXP, SEXP maxsearchSEXP, SEXP rowSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sunangle(sunangleSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type anglebreaks(anglebreaksSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type heightmap(heightmapSEXP);
    Rcpp::traits::input_parameter< double >::type zscale(zscaleSEXP);
    Rcpp::traits::input_parameter< double >::type maxsearch(maxsearchSEXP);
    Rcpp::traits::input_parameter< int >::type row(rowSEXP);
    rcpp_result_gen = Rcpp::wrap(rayshade_multicore(sunangle, anglebreaks, heightmap, zscale, maxsearch, row));
    return rcpp_result_gen;
END_RCPP
}
// rayshade_cpp
NumericMatrix rayshade_cpp(double sunangle, NumericVector anglebreaks, NumericMatrix heightmap, double zscale, double maxsearch, bool verbose);
RcppExport SEXP _rayshader_rayshade_cpp(SEXP sunangleSEXP, SEXP anglebreaksSEXP, SEXP heightmapSEXP, SEXP zscaleSEXP, SEXP maxsearchSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sunangle(sunangleSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type anglebreaks(anglebreaksSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type heightmap(heightmapSEXP);
    Rcpp::traits::input_parameter< double >::type zscale(zscaleSEXP);
    Rcpp::traits::input_parameter< double >::type maxsearch(maxsearchSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(rayshade_cpp(sunangle, anglebreaks, heightmap, zscale, maxsearch, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rayshader_rayshade_multicore", (DL_FUNC) &_rayshader_rayshade_multicore, 6},
    {"_rayshader_rayshade_cpp", (DL_FUNC) &_rayshader_rayshade_cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_rayshader(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
